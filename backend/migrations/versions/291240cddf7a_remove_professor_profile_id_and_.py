"""remove professor_profile_id and semester_id from workload

Revision ID: 291240cddf7a
Revises: 1759eda93d78
Create Date: 2025-09-12 18:00:56.890637

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '291240cddf7a'
down_revision: Union[str, None] = '1759eda93d78'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_group_id'), table_name='group_semester')
    op.drop_index(op.f('ix_semester_id'), table_name='group_semester')
    op.drop_table('group_semester')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_schedule_semester_id'), table_name='schedule')
    op.drop_table('schedule')
    op.drop_table('professor_workload')
    op.drop_index(op.f('ix_lesson_end_datetime'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_group_id'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_room_id'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_schedule_id'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_start_datetime'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_subject_assignment_id'), table_name='lesson')
    op.drop_table('lesson')
    op.drop_table('professor_contract')
    op.drop_index(op.f('ix_room_name'), table_name='room')
    op.drop_table('room')
    op.drop_table('student_profile')
    op.drop_table('group')
    op.drop_table('direction')
    op.drop_table('professor_profile')
    op.drop_table('subject')
    op.drop_table('study_form')
    op.drop_table('semester')
    op.drop_table('subject_assignment')
    op.drop_table('faculty')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faculty',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subject_assignment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('workload_id', sa.INTEGER(), nullable=False),
    sa.Column('subject_id', sa.INTEGER(), nullable=False),
    sa.Column('hours_per_subject', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['workload_id'], ['professor_workload.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workload_id', 'subject_id', name='uq_workload_subject')
    )
    op.create_table('semester',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('number', sa.INTEGER(), nullable=False),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('end_date', sa.DATE(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_form',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=9), nullable=True),
    sa.Column('direction_id', sa.INTEGER(), nullable=False),
    sa.CheckConstraint("name IN ('part_time', 'full_time')", name='user_type_enum'),
    sa.ForeignKeyConstraint(['direction_id'], ['direction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('direction_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['direction_id'], ['direction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor_profile',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('direction',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('code', sa.VARCHAR(length=20), nullable=False),
    sa.Column('faculty_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('study_form_id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['study_form_id'], ['study_form.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_profile',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_name'), 'room', ['name'], unique=1)
    op.create_table('professor_contract',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('professor_profile_id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.Column('total_hours', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['professor_profile_id'], ['professor_profile.user_id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('schedule_id', sa.INTEGER(), nullable=False),
    sa.Column('subject_assignment_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('start_datetime', sa.DATETIME(), nullable=False),
    sa.Column('end_datetime', sa.DATETIME(), nullable=False),
    sa.Column('lesson_type', sa.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedule.id'], ),
    sa.ForeignKeyConstraint(['subject_assignment_id'], ['subject_assignment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_subject_assignment_id'), 'lesson', ['subject_assignment_id'], unique=False)
    op.create_index(op.f('ix_lesson_start_datetime'), 'lesson', ['start_datetime'], unique=False)
    op.create_index(op.f('ix_lesson_schedule_id'), 'lesson', ['schedule_id'], unique=False)
    op.create_index(op.f('ix_lesson_room_id'), 'lesson', ['room_id'], unique=False)
    op.create_index(op.f('ix_lesson_group_id'), 'lesson', ['group_id'], unique=False)
    op.create_index(op.f('ix_lesson_end_datetime'), 'lesson', ['end_datetime'], unique=False)
    op.create_table('professor_workload',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('professor_profile_id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.Column('study_form_id', sa.INTEGER(), nullable=False),
    sa.Column('contract_id', sa.INTEGER(), nullable=False),
    sa.Column('assigned_hours', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['professor_contract.id'], ),
    sa.ForeignKeyConstraint(['professor_profile_id'], ['professor_profile.user_id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['study_form_id'], ['study_form.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professor_profile_id', 'semester_id', 'study_form_id', name=op.f('uq_professor_semester_study_form'))
    )
    op.create_table('schedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_semester_id'), 'schedule', ['semester_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('surname', sa.VARCHAR(length=100), nullable=False),
    sa.Column('role', sa.VARCHAR(length=11), nullable=False),
    sa.Column('user_type', sa.VARCHAR(length=9), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.CheckConstraint("role IN ('admin', 'coordinator', 'user')", name=op.f('user_role_enum')),
    sa.CheckConstraint("user_type IN ('student', 'professor')", name=op.f('user_type_enum')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=1)
    op.create_table('group_semester',
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'semester_id', name=op.f('pk_group_semester'))
    )
    op.create_index(op.f('ix_semester_id'), 'group_semester', ['semester_id'], unique=False)
    op.create_index(op.f('ix_group_id'), 'group_semester', ['group_id'], unique=False)
    # ### end Alembic commands ###
