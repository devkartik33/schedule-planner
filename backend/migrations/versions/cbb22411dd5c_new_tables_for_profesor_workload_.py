"""new tables for profesor workload, directions and study fors

Revision ID: cbb22411dd5c
Revises: a64c53cde5de
Create Date: 2025-08-11 09:04:27.057770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cbb22411dd5c'
down_revision: Union[str, None] = 'a64c53cde5de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_profile')
    op.drop_table('professor_profile')
    op.drop_table('group')
    op.drop_table('subject')
    op.drop_table('schedule')
    op.drop_table('faculty')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_room_number'), table_name='room')
    op.drop_table('room')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('number', sa.VARCHAR(), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_number'), 'room', ['number'], unique=1)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('surname', sa.VARCHAR(length=100), nullable=False),
    sa.Column('role', sa.VARCHAR(length=11), nullable=False),
    sa.Column('user_type', sa.VARCHAR(length=9), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.CheckConstraint("role IN ('admin', 'coordinator', 'user')", name='user_role_enum'),
    sa.CheckConstraint("user_type IN ('student', 'professor')", name='user_type_enum'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=1)
    op.create_table('faculty',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('schedule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('subject_id', sa.INTEGER(), nullable=False),
    sa.Column('professor_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('room_id', sa.INTEGER(), nullable=True),
    sa.Column('start_datetime', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('end_datetime', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor_profile.user_id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('faculty_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('semester', sa.INTEGER(), nullable=False),
    sa.Column('faculty_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor_profile',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('student_profile',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###
